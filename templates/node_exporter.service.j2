{{ ansible_managed | comment }}

[Unit]
Description=Prometheus Node Exporter
After=network-online.target

[Service]
Type=simple
User={{ _node_exporter_system_user }}
Group={{ _node_exporter_system_group }}
ExecStart={{ _node_exporter_binary_install_dir }}/node_exporter \
{% for collector in node_exporter_enabled_collectors -%}
{%   if not collector is mapping %}
    --collector.{{ collector }} \
{%   else -%}
{%     set name, options = (collector.items()|list)[0] -%}
    --collector.{{ name }} \
{%     for k,v in options|dictsort %}
    --collector.{{ name }}.{{ k }}={{ v | quote }} \
{%     endfor -%}
{%   endif -%}
{% endfor -%}
{% for collector in node_exporter_disabled_collectors %}
    --no-collector.{{ collector }} \
{% endfor %}
{% if node_exporter_tls_server_config | length > 0 or node_exporter_http_server_config | length > 0 or node_exporter_basic_auth_users | length > 0 %}
    --web.config=/etc/node_exporter/config.yaml \
{% endif %}
    --web.listen-address={{ node_exporter_web_listen_address }} \
    --web.telemetry-path={{ node_exporter_web_telemetry_path }}

SyslogIdentifier=node_exporter
Restart=always
RestartSec=1
StartLimitInterval=0

{% for m in ansible_mounts if m.mount == '/home' %}
ProtectHome=read-only
{% else %}
ProtectHome=yes
{% endfor %}
NoNewPrivileges=yes

{% if node_exporter_systemd_version | int >= 232 %}
ProtectSystem=strict
ProtectControlGroups=true
ProtectKernelModules=true
ProtectKernelTunables=yes
{% else %}
ProtectSystem=full
{% endif %}

{% if node_exporter_systemd_version | int > 237 %}
Umask=077

{% endif %}
PrivateTmp=true
PrivateDevices=true
PrivateNetwork=false
# Ubuntu 18.04/systemd 237 ok; Raspbian 10/systemd 241 nok = (code=exited, status=217/USER)
# PrivateUsers=true
{% if node_exporter_systemd_version | int > 237 %}
ProtectClock=true
{% endif %}

CapabilityBoundingSet=~CAP_SETUID CAP_SETGID CAP_SETPCAP
CapabilityBoundingSet=~CAP_SYS_ADMIN
CapabilityBoundingSet=~CAP_SYS_PTRACE
CapabilityBoundingSet=~CAP_CHOWN CAP_FSETID CAP_SETFCAP
CapabilityBoundingSet=~CAP_DAC_* CAP_FOWNER CAP_IPC_OWNER
CapabilityBoundingSet=~CAP_NET_ADMIN
CapabilityBoundingSet=~CAP_KILL
CapabilityBoundingSet=~CAP_SYSLOG
CapabilityBoundingSet=~CAP_NET_BIND_SERVICE CAP_NET_BROADCAST
CapabilityBoundingSet=~CAP_SYS_NICE CAP_SYS_RESOURCE
CapabilityBoundingSet=~CAP_SYS_MODULE
CapabilityBoundingSet=~CAP_SYS_RAWIO
CapabilityBoundingSet=~CAP_SYS_BOOT
CapabilityBoundingSet=~CAP_LINUX_IMMUTABLE
CapabilityBoundingSet=~CAP_SYS_CHROOT
CapabilityBoundingSet=~CAP_IPC_LOCK
CapabilityBoundingSet=~CAP_BLOCK_SUSPEND
CapabilityBoundingSet=~CAP_LEASE
CapabilityBoundingSet=~CAP_SYS_PACCT
CapabilityBoundingSet=~CAP_SYS_TTY_CONFIG

RestrictRealtime=true
RestrictNamespaces=~user
RestrictNamespaces=~mnt
{% if node_exporter_systemd_version | int > 237 %}
RestrictNamespaces=~CLONE_NEWUTS
RestrictNamespaces=~CLONE_NEWPID
RestrictNamespaces=~CLONE_NEWNET
RestrictNamespaces=~CLONE_NEWIPC
RestrictNamespaces=~CLONE_NEWCGROUP
{% endif %}

RestrictSUIDSGID=true
LockPersonality=true
MemoryDenyWriteExecute=true

RestrictAddressFamilies=AF_INET AF_INET6 AF_UNIX
IPAccounting=yes
IPAddressAllow={{ node_exporter_systemd_ipaddressallow | default('localhost link-local multicast 10.0.0.0/8 192.168.0.0/16') }}

{% if not (ansible_virtualization_type is defined and
          ansible_virtualization_type == "docker"
        )
%}
{% if (ansible_os_family == 'RedHat' and ansible_distribution_major_version|int >= 8) or (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int >= 18) %}
# FIXME! strangely, in either configurations, `systemd-analyze security node_exporter` still returns as nok
#SystemCallFilter=@default @file-system @basic-io @system-service @signal @io-event @network-io @ipc @process @resources
SystemCallFilter=~@debug
SystemCallFilter=~@mount
SystemCallFilter=~@cpu-emulation
SystemCallFilter=~@obsolete
SystemCallFilter=~@module
SystemCallFilter=~@raw-io
SystemCallFilter=~@reboot
SystemCallFilter=~@swap
SystemCallFilter=~@chown
SystemCallFilter=~@keyring
SystemCallFilter=~@memlock
SystemCallFilter=~@setuid
SystemCallFilter=~@sync
SystemCallFilter=~@timer
SystemCallArchitectures=native
{% endif %}
# When system call is disallowed, return error code instead of killing process
SystemCallErrorNumber=EPERM

{% endif %}
{% if node_exporter_systemd_cgroups_restriction_enable is not defined or node_exporter_systemd_cgroups_restriction_enable|bool %}
CPUShares={{ node_exporter_systemd_cgroups_cpushares | default('1024') }}
CPUQuota={{ node_exporter_systemd_cgroups_cpuquota | default('40%') }}
MemoryLimit={{ node_exporter_systemd_cgroups_memorylimit | default('1G') }}
{% endif %}

[Install]
WantedBy=multi-user.target
